#!/usr/bin/env coffee
# vim:ft=coffee ts=2 sw=2 et :
# -*- mode:coffee -*-

Hubot   = require '..'
Creator = require '../src/creator'

Fs      = require 'fs'
Path    = require 'path'

App     = require 'commander'

pkg = Fs.readFileSync "#{__dirname}/../package.json"

App.name = 'hubot'
App.version = JSON.parse(pkg).version

App
  .command('create [path]')
  .description('Create a new deployable hubot')
  .action (path, options) ->
    path or= './hubot'
    creator = new Creator(path)
    creator.run()

App
  .command('start')
  .description('Start a hubot instance')
  .option('-a, --adapter <adapter>', 'Adapter for hubot to use')
  .option('-d, --no-http', 'Disable the built in HTTP server')
  .option('-l, --alias [alias]', 'Enable replacing the username with an alias')
  .option('-u, --username <username>', 'Name for hubot to use')
  .action (options) ->
    name = options.username or 'hubot'
    adapter = options.adapter or 'shell'
    http = !!options.http
    alias = if options.alias is true then '/' else options.alias

    adapterPath = Path.join __dirname, '..', 'src', 'adapters'
    robot = Hubot.loadBot adapterPath, adapter, http, name

    robot.enableSlash = !!alias
    robot.alias = alias

    robot.adapter.on 'connected', ->
      robot.load Path.join __dirname, '..', 'scripts'
      robot.load Path.join __dirname, '..', 'src', 'scripts'

      scriptsFile = Path.join __dirname, '..', 'hubot-scripts.json'
      Fs.exists scriptsFile, (exists) ->
        if exists
          Fs.readFile scriptsFile, (err, data) ->
            scripts = JSON.parse data
            path = Path.join __dirname, 'node_modules', 'hubot-scripts', 'src', 'scripts'
            robot.loadHubotScripts path, scripts

    robot.run()

App.parse process.argv

if process.argv.length is 2
  console.log App.helpInformation()
  process.exit 0

unless process.platform is 'win32'
  process.on 'SIGTERM', -> process.exit 0
